openapi: "3.0.2"
info:
  title: KAIA OPEN API
  version: "1.10.0"
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost:7151

paths:
  /eth/block/getBlockByNumber:
    post:
      operationId: getBlockByNumber
      summary: "[Block] eth_getBlockByNumber"
      description: |
        Returns information about a block by block number.

        Please check Caution-Block before using this API.

        **JSONRPC:** `eth_getBlockByNumber`
      tags:
        - eth

      parameters:
        - name: blockNumberOrTag
          required: true
          schema:
            $ref: "../../../components/schemas/common/Common.yaml#/components/schemas/BlockNumberOrTag"
          description: Integer or hexadecimal block number, or the string "earliest", "latest" or "pending" as in the default block parameter.
          in: query
        - name: isTransactionObjects
          in: query
          description: If true it returns the full transaction objects, if false only the hashes of the transactions.
          required: true
          schema:
            type: boolean

      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "../../../components/requests/JsonRpcRequest.yaml#/components/schemas/JsonRpcRequest"
                - $ref: "#/components/schemas/EthGetBlockByNumberReq"

      responses:
        200:
          description: Returns information about a block by block number.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "../../../components/responses/JsonRpcResponse.yaml#/components/schemas/JsonRpcResponse"
                  - $ref: "#/components/schemas/EthGetBlockByNumberResp"

      x-codeSamples:
        - lang: "Shell"
          label: "Curl"
          source:
            $ref: "../../../code-samples/curl/eth/block/getBlockByNumber.sh"
        - lang: "Java"
          label: "Java"
          source:
            $ref: "../../../code-samples/java/src/main/java/opensdk/sdk/apis/eth/block/EthGetBlockByNumberExample.java"
        - lang: "JavaScript"
          label: "Javascript"
          source:
            $ref: "../../../code-samples/javascript/eth/block/getBlockByNumber.js"
        - lang: "Python"
          label: "Python"
          source:
            $ref: "../../../code-samples/python/eth/block/getBlockByNumber.py"

components:
  schemas:
    EthGetBlockByNumberReq:
      type: object
      required:
        - method
        - params
      properties:
        method:
          type: string
          default: 'eth_getBlockByNumber'
        params:
          type: array
          items:
            properties:
              BlockNumberOrTag:
                $ref: "../../../components/schemas/common/Common.yaml#/components/schemas/BlockNumberOrTag"
              IsTransactionObjects:
                type: boolean
                title: IsTransactionObjects
                description: If true it returns the full transaction objects, if false only the hashes of the transactions.
          example:  ["0xd0054e", false]

    EthGetBlockByNumberResp:
      type: object
      properties:
        result:
          type: object
          nullable: true
          required:
            - baseFeePerGas
            - difficulty
            - extraData
            - gasLimit
            - gasUsed
            - hash
            - logsBloom
            - miner
            - mixHash
            - nonce
            - number
            - parentHash
            - receiptsRoot
            - sha3Uncles
            - size
            - stateRoot
            - timestamp
            - totalDifficulty
            - transactionsRoot
            - transactions
            - uncles
          properties:
            baseFeePerGas:
              type: string
              format: hex
              description: The base fee per gas.
            difficulty:
              type: string
              format: hex
              description: The integer of the difficulty for this block
            extraData:
              type: string
              format: DATA
              description: The "extra data" field of this block.
            gasLimit:
              type: string
              format: hex
              description: The maximum gas allowed in this block.
            gasUsed:
              type: string
              format: hex
              description: The total used gas by all transactions in this block.
            hash:
              type: string
              format: 32-byte DATA
              nullable: true
              description: Hash of the block. null when it is a pending block.
            logsBloom:
              type: string
              format: 256-byte DATA
              nullable: true
              description: The bloom filter for the logs of the block. null when it is a pending block.
            miner:
              type: string
              format: 20-byte DATA
              description: The address of the beneficiary to whom the mining rewards were given.
            mixHash:
              type: string
              format: 32-byte DATA
              description: The hash which proves combined with the nonce that a sufficient amount of computation has been carried out on this block.
            nonce:
              type: string
              format: 8-byte DATA
              description: The hash of the generated proof-of-work.
            number:
              type: string
              format: hex
              nullable: true
              description: The block number. null when it is a pending block.
            parentHash:
              type: string
              format: 32-byte DATA
              description: Hash of the parent block.
            receiptsRoot:
              type: string
              format: 32-byte DATA
              description: The root of the receipts trie of the block.
            sha3Uncles:
              type: string
              format: 32-byte DATA
              description: The SHA3 of the uncles data in the block.
            size:
              type: string
              format: hex
              description: Integer of the size of this block in bytes.
            stateRoot:
              type: string
              format: 32-byte DATA
              description: The root of the final state trie of the block.
            timestamp:
              type: string
              format: hex
              description: The Unix timestamp for when the block was collated.
            totalDifficulty:
              type: string
              format: hex
              description: The total blockScore of the chain until this block
            transactionsRoot:
              type: string
              format: 32-byte DATA
              description: The root of the transaction trie of the block.
            transactions:
              type: array
              description: Array of transaction objects, or 32-byte transaction hashes depending on the last given parameter.
              items:
                anyOf:
                  - type: string
                    format: 32-byte DATA
                  - type: object
                    title: TransactionObject
            uncles:
              type: array
              items:
                type: string
              description: Array of uncle hashes.
          example:
              {
                "baseFeePerGas": "0x5d21dba00",
                "difficulty": "0x1",
                "extraData": "0x",
                "gasLimit": "0xe8d4a50fff",
                "gasUsed": "0x44437",
                "hash": "0x456a7cbb6fada11a0ca8cec24510d89da1c52898f1087528752ae6e13973fbc5",
                "logsBloom": "0x0000100000000094000000400000080000000040000000000000000000000002000000000000000000000000004001000000200000000000000008000220000000080400000800000000000a000000000000000000000000000010000000000000002000000408000000000000000010000080101002000000000010000000100000010000200800000400000080000000000000000000000002000000102000024000080200000000000082000000000000000000000000010000000000000000100012000000000000011000000000002000201000000008000000002000000010002800000000001400000000000000000000000100000000200000000000",
                "miner": "0x1ad91ee08f21be3de0ba2ba6918e714da6b45836",
                "mixHash": "0x0000000000000000000000000000000000000000000000000000000000000000",
                "nonce": "0x0000000000000000",
                "number": "0xd0054e",
                "parentHash": "0x2b88fdb3821669357a0b8367115e30145135c44bb8f62641d4e7765a7f555d17",
                "receiptsRoot": "0xc36bc44d0b52dee954be9bbd519bddc0bf6e991af2ed6f6ba506f89f10cdb9a7",
                "sha3Uncles": "0x1dcc4de8dec75d7aab85b567b6ccd41ad312451b948a7413f0a142fd40d49347",
                "size": "0x64c",
                "stateRoot": "0x123a0da1c621236e64f9b486a9a9712ec6ce07d6690acab5a18b716d17cdc29f",
                "timestamp": "0x6194f184",
                "totalDifficulty": "0xd0054f",
                "transactions": [
                  "0x5b3492f8199ee2a551d991b7d00bd48967ca5e5c1c15d6e1ee9fda97e3126e9a",
                  "0x8e1870262f2ba0452458280ad6ad5d54e5288623e415692c822979b7608c7297",
                  "0x98053d20b01c9e56964a57084fb91ccc01b242adfb09c23534162dcbbcc094c2",
                ],
                "transactionsRoot": "0x29b9880f57c0e79d0be5aa4fcc6b4cfcbed3e51478ad8f44533acce012df8cf1",
                "uncles": [ ]
              }
