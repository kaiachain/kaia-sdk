openapi: "3.0.2"
info:
  title: KAIA OPEN API
  version: "1.10.0"
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost:7151

paths:
  /personal/sendTransaction:
    post:
      operationId: sendTransaction
      summary: "personal_sendTransaction"
      description: |
        Validates the given passphrase and submits a TxTypeLegacy transaction. The transaction object must have from and to except the case of contract deployment. to should be omitted if the transaction deploys a smart contract. If value is not specified, it will be set to zero internally. Other fields such as gas, gasPrice, and nonce are set to appropriate values internally if unspecified. If the passphrase is able to decrypt the private key belonging to tx.from and the transaction is verified, the transaction is signed and submitted onto the network. The account is not unlocked globally in the node and cannot be used in other RPC calls.

        **JSONRPC:** `personal_sendTransaction`
      tags:
        - personal

      parameters:
        - name: tx
          required: true
          schema:
            type: string
          description: A transaction object. from is a required field. to, value, gas, gasPrice and nonce are optional fields.
          in: query
        - name: passphrase
          required: true
          schema:
            type: string
          description: The passphrase to decrypt the private key of tx.from.
          in: query

      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "../../components/requests/JsonRpcRequest.yaml#/components/schemas/JsonRpcRequest"
                - $ref: "#/components/schemas/PersonalSendTransactionReq"

      responses:
        200:
          description: Return a transaction hash if succeeded. Otherwise, an error is raised.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "../../components/responses/JsonRpcResponse.yaml#/components/schemas/JsonRpcResponse"
                  - type: object
                    properties:
                      result:
                        title: SendTransactionResponse
                        type: string
                        format: 32-byte DATA
                        description: a transaction hash if succeeded. Otherwise, an error is raised.
                        example: "0x8474441674cdd47b35b875fd1a530b800b51a5264b9975fb21129eeb8c18582f"

      x-codeSamples:
        - lang: "Shell"
          label: "Curl"
          source:
            $ref: "../../code-samples/curl/personal/sendTransaction.sh"
        - lang: "Java"
          label: "Java"
          source:
            $ref: "../../code-samples/java/src/main/java/opensdk/sdk/apis/personal/PersonalSendTransactionExample.java"
        - lang: "JavaScript"
          label: "Javascript"
          source:
            $ref: "../../code-samples/javascript/personal/sendTransaction.js"
        - lang: "Python"
          label: "Python"
          source:
            $ref: "../../code-samples/python/personal/sendTransaction.py"

components:
  schemas:
    PersonalSendTransactionReq:
      type: object
      required:
        - method
        - params
      properties:
        method:
          type: string
          default: 'personal_sendTransaction'
        params:
          type: array
          items:
            properties:
              Tx:
                type: object
                title: Tx
                description: A transaction object. from is a required field. to, value, gas, gasPrice and nonce are optional fields.
              Passphrase:
                type: string
                title: Passphrase
                description: The passphrase to decrypt the private key of tx.from.
          example: [{"from":"0x1d4e05bb72677cb8fa576149c945b57d13f855e4","to":"0xafa3f8684e54059998bc3a7b0d2b0da075154d66","value":"0x1230000000"}, "gr8=B!0@uc$b"]

