openapi: "3.0.2"
info:
  title: KAIA OPEN API
  version: "1.10.0"
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost:7151

paths:
  /admin/nodeInfo:
    post:
      operationId: nodeInfo
      summary: "admin_nodeInfo"
      description: |
        The nodeInfo administrative property can be queried for all the information known about the running Kaia node at the networking granularity. These include general information about the node itself as a participant of the devp2p P2P overlay protocol, as well as specialized information added by each of the running application protocols, e.g., klay.
        
        **JSONRPC:** `admin_nodeInfo`

      tags:
        - admin
      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "../../components/requests/JsonRpcRequest.yaml#/components/schemas/JsonRpcRequest"
                - $ref: "#/components/schemas/NodeInfoReq"

      responses:
        200:
          description: The node information.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "../../components/responses/JsonRpcResponse.yaml#/components/schemas/JsonRpcResponse"
                  - $ref: "#/components/schemas/NodeInfoResp"

      x-codeSamples:
        - lang: "Shell"
          label: "Curl"
          source:
            $ref: "../../code-samples/curl/admin/nodeInfo.sh"
        - lang: "Java"
          label: "Java"
          source:
            $ref: "../../code-samples/java/src/main/java/opensdk/sdk/apis/admin/AdminNodeInfoExample.java"
        - lang: "JavaScript"
          label: "Javascript"
          source:
           $ref: "../../code-samples/javascript/admin/nodeInforApi.js"
        - lang: "Python"
          label: "Python"
          source:
            $ref: "../../code-samples/python/admin/nodeInfo.py"

components:
  schemas:
    NodeInfoReq:
      type: object
      required:
        - method
      properties:
        method:
          type: string
          default: 'admin_nodeInfo'

    NodeInfoResp:
      type: object
      properties:
        result:
          type: object
          description: The node information.
          example: 
            {"id":"377ef808aff73a397d133b3bf160df586054c98c0e6a65c8fce9560e6a0632bc975419f461803d27f28ee270287113cc2359225814debc1bfb2f811061e14c5d", "name":"Kaia/vvX.X.X/XXXX-XXXX/goX.X.X",    "kni":"kni://377ef808aff73a397d133b3bf160df586054c98c0e6a65c8fce9560e6a0632bc975419f461803d27f28ee270287113cc2359225814debc1bfb2f811061e14c5d@[::]:32323?discport=0",
              "ip":"::",
              "ports":{"discovery":0,"listener":32323},
              "listenAddr":"[::]:32323",
              "protocols":{"istanbul":{"network":1000,"difficulty":1,"genesis":"0x06806bd8b1e086dfb7098a289da07037a3af58e793d205d20f61c88eeea9351d","config":{"chainId":1000,"istanbul":{"epoch":30000,"policy":0,"sub":7},"isBFT":true,"unitPrice":25000000000,"deriveShaImpl":0},"head":"0x06806bd8b1e086dfb7098a289da07037a3af58e793d205d20f61c88eeea9351d"}}
            }




