openapi: "3.0.2"
info:
  title: KAIA OPEN API
  version: "1.10.0"
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost:7151

paths:
  /klay/transaction/sendTransaction:
    post:
      operationId: sendTransaction
      summary: "[Transaction] klay_sendTransaction"
      description: |
        Constructs a transaction with given parameters, signs the transaction with a sender's private key and propagates the transaction to Kaia network.

        `klay_sendTransaction` will be failed to baobab/cypress network because it is signed in the EN node, which means that the EN must have the key that you want to sign with.
        Steps to test `klay_sendTransaction`.
          - Step 1: Setup a local EN node
          - Step 2: <a href="#tag/personal/operation/newAccount" target="_blank">Create an account</a> into the EN node
          - Step 3: <a href="#tag/personal/operation/unlockAccount" target="_blank">Unlock the account</a> for using in signing

        **JSONRPC:** `klay_sendTransaction`

      tags:
        - klay

      parameters:
        - name: klaytnTransactionTypes
          required: true
          schema:
            $ref: "../../../components/schemas/common/KlaytnTransactionTypes.yaml#/components/schemas/KlaytnTransactionTypes"
          description: The required parameters depend on the transaction type.
          in: query

      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "../../../components/requests/JsonRpcRequest.yaml#/components/schemas/JsonRpcRequest"
                - $ref: "#/components/schemas/KlaySendTransactionReq"

      responses:
        200:
          description: Returns the transaction hash.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "../../../components/responses/JsonRpcResponse.yaml#/components/schemas/JsonRpcResponse"
                  - type: object
                    properties:
                      result:
                        type: string
                        format: 32-byte DATA
                        description: "The transaction hash"
                        example: "0xe670ec64341771606e55d6b4ca35a1a6b75ee3d5145a99d05921026d1527331"

      x-codeSamples:
        - lang: "Shell"
          label: "Curl"
          source:
            $ref: "../../../code-samples/curl/klay/transaction/sendTransaction.sh"
        - lang: "Java"
          label: "Java"
          source:
            $ref: "../../../code-samples/java/src/main/java/opensdk/sdk/apis/klay/transaction/KlaySendTransactionExample.java"
        - lang: "JavaScript"
          label: "Javascript"
          source:
            $ref: "../../../code-samples/javascript/klay/transaction/sendTransaction.js"
        - lang: "Python"
          label: "Python"
          source:
            $ref: "../../../code-samples/python/klay/transaction/sendTransaction.py"

components:
  schemas:
    KlaySendTransactionReq:
      type: object
      required:
        - method
        - params
      properties:
        method:
          type: string
          default: 'klay_sendTransaction'
        params:
          type: array
          items:
            $ref: "../../../components/schemas/common/KlaytnTransactionTypes.yaml#/components/schemas/KlaytnTransactionTypes"
          example:
            [ {
              "from": "0xb60e8dd61c5d32be8058bb8eb970870f07233155",
              "to": "0xd46e8dd67c5d32be8058bb8eb970870f07244567",
              "gas": "0x76c0",
              "gasPrice": "0x5d21dba00",
              "value": "0x9184e72a",
              "input": "0xd46e8dd67c5d32be8d46e8dd67c5d32be8058bb8eb970870f072445675058bb8eb970870f072445675"
            } ]
