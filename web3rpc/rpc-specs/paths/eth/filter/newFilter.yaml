openapi: "3.0.2"
info:
  title: KAIA OPEN API
  version: "1.10.0"
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost:7151

paths:
  /eth/filter/newFilter:
    post:
      operationId: newFilter
      summary: "[Filter] eth_newFilter"
      description: |
        Creates a filter object, based on filter options, to notify when the state changes (logs).
        - To check if the state has changed, call eth_getFilterChanges.
        - To obtain all logs matching the filter created by eth_newFilter, call eth_getFilterLogs.

        **A note on specifying topic filters:** Topics are order-dependent. A transaction with a log with topics [A, B] will be matched by the following topic filters:
        - [] "anything"
        - [A] "A in first position (and anything after)"
        - [null, B] "anything in first position AND B in second position (and anything after)"
        - [A, B] "A in first position AND B in second position (and anything after)"
        - [[A, B], [A, B]] "(A OR B) in first position AND (A OR B) in second position (and anything after)"

        **NOTE**: In versions earlier than Kaia v1.7.0, only integer block number, the string "earliest" and "latest" are available.

        **JSONRPC:** `eth_newFilter`

      tags:
        - eth

      parameters:
        - name: filterOptions
          required: true
          schema:
            $ref: "#/components/schemas/FilterOptions"
          description: The filter options
          in: query

      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "../../../components/requests/JsonRpcRequest.yaml#/components/schemas/JsonRpcRequest"
                - $ref: "#/components/schemas/EthNewFilterReq"

      responses:
        200:
          description: Returns a filter id
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "../../../components/responses/JsonRpcResponse.yaml#/components/schemas/JsonRpcResponse"
                  - $ref: "#/components/schemas/EthNewFilterResp"

      x-codeSamples:
        - lang: "Shell"
          label: "Curl"
          source:
            $ref: "../../../code-samples/curl/eth/filter/newFilter.sh"
        - lang: "Java"
          label: "Java"
          source:
            $ref: "../../../code-samples/java/src/main/java/opensdk/sdk/apis/eth/filter/EthNewFilterExample.java"
        - lang: "JavaScript"
          label: "Javascript"
          source:
            $ref: "../../../code-samples/javascript/eth/filter/newFilter.js"
        - lang: "Python"
          label: "Python"
          source:
            $ref: "../../../code-samples/python/eth/filter/newFilter.py"

components:
  schemas:
    EthNewFilterReq:
      type: object
      required:
        - method
        - params
      properties:
        method:
          type: string
          default: 'eth_newFilter'
        params:
          type: array
          items:
            $ref: "#/components/schemas/FilterOptions"
          example:  [{"fromBlock":"earliest","toBlock":"latest","address":"0x87ac99835e67168d4f9a40580f8f5c33550ba88b","topics":["0xd596fdad182d29130ce218f4c1590c4b5ede105bee36690727baa6592bd2bfc8"]}]

    EthNewFilterResp:
      type: object
      properties:
        result:
          type: string
          format: hex
          description: A filter id
          example: "0xd32fd16b6906e67f6e2b65dcf48fc272"

    Topics:
      type: array
      description: |
         (optional) Array of 32-byte DATA topics. Topics are order-dependent. Each topic can also be an array of DATA with "or" options.
      items:
        type: string
        format: 32-byte DATA

    FilterOptions:
      title: FilterOptions
      type: object
      properties:
        fromBlock:
          allOf:
            - $ref: "../../../components/schemas/common/Common.yaml#/components/schemas/BlockNumberOrTag"
            - title: BlockNumberOrTag
              description: |
                (optional, default: "latest") Integer or hexadecimal block number, or the string "earliest", "latest" or "pending" as in the default block parameter.
        toBlock:
          allOf:
            - $ref: "../../../components/schemas/common/Common.yaml#/components/schemas/BlockNumberOrTag"
            - title: BlockNumberOrTag
              description: |
                (optional, default: "latest") Integer or hexadecimal block number, or the string "earliest", "latest" or "pending" as in the default block parameter.
        address:
          oneOf:
            - type: array
              items:
                anyOf:
                  - $ref: "../../../components/schemas/common/Common.yaml#/components/schemas/Address"
            - $ref: "../../../components/schemas/common/Common.yaml#/components/schemas/Address"
          description: (optional) Contract address or a list of addresses from which logs should originate.
        topics:
          $ref: "#/components/schemas/Topics"
