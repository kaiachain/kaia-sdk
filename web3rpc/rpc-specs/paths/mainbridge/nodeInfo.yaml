openapi: "3.0.2"
info:
  title: KAIA Open API
  version: "1.10.0"
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost:7151

paths:
  /mainbridge/nodeInfo:
    post:
      summary: "mainbridge_nodeInfo"
      tags:
        - mainbridge
      operationId: nodeInfo
      description: |
        Returns bridge node information including the KNI (Kaia Network Identifier) of the node. A mainbridge node can connect to a subbrige node via the KNI.

        **JSONRPC:** `mainbridge_nodeInfo`

      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "../../components/requests/JsonRpcRequest.yaml#/components/schemas/JsonRpcRequest"
                - $ref: "#/components/schemas/MainbridgeNodeInfoReq"

      responses:
        200:
          description: Returns bridge node information including the KNI (Kaia Network Identifier) of the node.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "../../components/responses/JsonRpcResponse.yaml#/components/schemas/JsonRpcResponse"
                  - $ref: "#/components/schemas/MainbridgeNodeInfoResp"

      x-codeSamples:
        - lang: "Shell"
          label: "Curl"
          source:
            $ref: "../../code-samples/curl/mainbridge/nodeInfo.sh"
        # - lang: "Java"
        #   label: "Java"
        #   source:
        #     $ref: ""
        # - lang: "JavaScript"
        #   label: "Javascript"
        #   source:
        #     $ref: "../../../code-samples/javascript/eth/miscellaneous/nodeInfo.js"
        # - lang: "Python"
        #   label: "Python"
        #   source:
        #     $ref: "../../../code-samples/python/eth/miscellaneous/nodeInfo.py"

components:
  schemas:
    MainbridgeNodeInfoReq:
      type: object
      required:
        - method
      properties:
        method:
          type: string
          default: 'mainbridge_nodeInfo'

    MainbridgeNodeInfoResp:
      type: object
      properties:
        result:
          type: object
          description: the bridge node information.
          example: {
            kni: "kni://f8a1f0cd1e2bebeece571e4fda16e215218fd4b9bc2eddd924f7cd5b5f950fcec8f4b8cd3851390d1d0bacf1b15e1c4a38c882252e429a28d16eeb6edbacd726@[::]:50505?discport=0",
            id: "f8a1f0cd1e2bebeece571e4fda16e215218fd4b9bc2eddd924f7cd5b5f950fcec8f4b8cd3851390d1d0bacf1b15e1c4a38c882252e429a28d16eeb6edbacd726",
            ip: "::",
            listenAddr: "[::]:50505",
            name: "-2",
            ports: {
              discovery: 0,
              listener: 50505
            },
            protocols: {
              servicechain: {
                config: {
                  chainId: 2018,
                  deriveShaImpl: 0,
                  isBFT: true,
                  istanbul: {...},
                  unitPrice: 0
                },
                difficulty: 87860,
                genesis: "0x711ce9865492659977abb2758d29f68c2b0c82862d9376f25953579f64f95b58",
                head: "0x0d4b130731f1e7560e4531ac73d55ac8c6daccb178abd86af0d96b7aafded7c5",
                network: 1
              }
            }
          }