openapi: "3.0.2"
info:
  title: KAIA Open API
  version: "1.10.0"
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost:7151

paths:
  /subbridge/getReceiptFromParentChain:
    post:
      summary: "subbridge_getReceiptFromParentChain"
      tags:
        - subbridge
      operationId: getReceiptFromParentChain
      description: |
        The subbridge_getReceiptFromParentChain returns the receipt of the anchoring transaction.

        **JSONRPC:** `subbridge_getReceiptFromParentChain`

      parameters:
        - name: blockHash
          in: query
          required: true
          description: The child chain block hash that was included the anchoring tx hash.
          schema:
            $ref: "../../components/schemas/common/Common.yaml#/components/schemas/BlockHash"

      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "../../components/requests/JsonRpcRequest.yaml#/components/schemas/JsonRpcRequest"
                - $ref: "#/components/schemas/SubbridgeGetReceiptFromParentChainReq"

      responses:
        200:
          description: Object - A transaction receipt object, or null when no receipt was found.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "../../components/responses/JsonRpcResponse.yaml#/components/schemas/JsonRpcResponse"
                  - $ref: "#/components/schemas/SubbridgeGetReceiptFromParentChainResp"

      x-codeSamples:
        - lang: "Shell"
          label: "Curl"
          source:
            $ref: "../../code-samples/curl/subbridge/getReceiptFromParentChain.sh"
        # - lang: "Java"
        #   label: "Java"
        #   source:
        #     $ref: ""
        # - lang: "JavaScript"
        #   label: "Javascript"
        #   source:
        #     $ref: ""
        # - lang: "Python"
        #   label: "Python"
        #   source:
        #     $ref: ""

components:
  schemas:
    SubbridgeGetReceiptFromParentChainReq:
      type: object
      required:
        - method
        - params
      properties:
        method:
          type: string
          default: 'subbridge_getReceiptFromParentChain'
        params:
          type: array
          items:
            type: string
            format: 32-byte DATA
            description: The child chain block hash that was included the anchoring tx hash.
          example: ["0x4f300d6574e71d7940c88fe08f27d9ac45cbc7b81d45c17e848d3772f64377b5"]

    SubbridgeGetReceiptFromParentChainResp:
      type: object
      properties:
        result:
          type: object
          description: Object - A transaction receipt object, or null when no receipt was found.
          required:
            - contractAddress
            - gasUsed
            - logs
            - logsBloom
            - status
            - transactionHash
          properties:
            contractAddress:
              type: string
              format: DATA
              description: The contract address created, if the transaction was a contract creation, otherwise null. (will be deprecated)
            gasUsed:
              type: string
              format: hex
              description: The amount of gas used by this specific transaction alone.
            logs:
              type: array
              items:
                type: object
              description: Array of log objects, which this transaction generated.
            logsBloom:
              type: string
              format: 256-byte DATA
              description: Bloom filter for light clients to quickly retrieve related logs.
            status:
              type: string
              format: hex
              description: Either 1 (success) or 0 (failure).
            transactionHash:
              type: string
              format: 32-byte DATA
              description: Hash of the transaction.
          example: {
            contractAddress: "0x0000000000000000000000000000000000000000",
            gasUsed: "0x9470",
            logs: [],
            logsBloom: "0x
            status: "0x1",
            transactionHash: "0x3641f52359f44ef2a9941ea840aed4befbace5cac28d5cc8cacd94eae211fd1e"
          }