openapi: "3.0.2"
info:
  title: KAIA OPEN API
  version: "1.10.0"
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost:7151

paths:
  /governance/vote:
    post:
      operationId: vote
      summary: "governance_vote"
      description: |
        The vote method submits a new vote. If the node has the right to vote based on governance mode, the vote can be placed. If not, an error message will be returned and the vote will be ignored.

        **JSONRPC:** `governance_vote`
        The vote method submits a new vote. If the node has the right to vote based on governance mode, the vote can be placed. If not, an error message will be returned and the vote will be ignored.

        You can vote for the parameters listed in kaia_getParams, except immutable items. Immutable items are first decided at the genesis configuration and remain unchanged.

        In addition to the parameters described in kaia_getParams, you can vote for validator council changes using the values below.
        
        <table>
        <tr>
            <th>Key<</th>
            <th>Value</th>
        </tr>
        <tr>
            <td><code>governance.addvalidator</code></td>
            <td>ADDRESS. An address or comma-separated list of addresses of a new validator candidate. e.g., <code>0xe733cb4d279da696f30d470f8c04decb54fcb0d2</code>, <code>0xf39fd6e51aad88f6f4ce6a88827279cFfB92266</code></td>
        </tr>
        <tr>
            <td><code>governance.removevalidator</code></td>
            <td>ADDRESS. An address or comma-separated list of addresses of a current validator to be removed. e.g., <code>0xe733cb4d279da696f30d470f8c04decb54fcb0d2</code></td>
        </tr>
        </table>

      tags:
        - governance

      parameters:
        - name: key
          required: true
          schema:
            type: string
          description: Name of the configuration setting to be changed. Key has the form of domain.field
          in: query
        - name: value
          required: true
          schema:
            $ref: "#/components/schemas/Value"
          description: Various types of value for each key.
          in: query


      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "../../components/requests/JsonRpcRequest.yaml#/components/schemas/JsonRpcRequest"
                - type: object
                  required:
                    - method
                    - params
                  properties:
                    method:
                      type: string
                      default: 'governance_vote'
                    params:
                      type: array
                      items:
                        properties:
                          Key:
                            type: string
                            title: Key
                            description: Name of the configuration setting to be changed. Key has the form of domain.field
                          Value:
                            $ref: "#/components/schemas/Value"
                      example: ["governance.governancemode", "ballot"]

      responses:
        200:
          description: Result of vote submission
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "../../components/responses/JsonRpcResponse.yaml#/components/schemas/JsonRpcResponse"
                  - type: object
                    properties:
                      result:
                        type: string
                        description: Result of vote submission
                        example: Your vote was successfully placed.

      x-codeSamples:
        - lang: "Shell"
          label: "Curl"
          source:
            $ref: "../../code-samples/curl/governance/vote.sh"
        - lang: "Java"
          label: "Java"
          source:
            $ref: "../../code-samples/java/src/main/java/opensdk/sdk/apis/governance/GovernanceVoteExample.java"
        - lang: "JavaScript"
          label: "Javascript"
          source:
            $ref: "../../code-samples/javascript/governance/vote.js"
        - lang: "Python"
          label: "Python"
          source:
            $ref: "../../code-samples/python/governance/vote.py"

components:
  schemas:
    Value:
      type: string
      description: Various types of value for each key.

        