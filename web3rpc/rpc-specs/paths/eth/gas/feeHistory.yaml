openapi: "3.0.2"
info:
  title: KAIA Open API
  version: "1.10.0"
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost:7151

paths:
  /eth/gas/feeHistory:
    post:
      summary: "[Gas] eth_feeHistory"
      tags:
        - eth
      operationId: feeHistory
      description: |
        Returns historical gas information for a range of blocks.

        **JSONRPC:** `eth_feeHistory`

      parameters:
        - name: blockCount
          required: true
          schema:
            type: string
            format: Hexadecimal
          description: Number of blocks in the requested range.
          in: query
        - name: lastBlock
          in: query
          description: Highest block of the requested range. Can be a number or "latest".
          required: true
          schema:
            $ref: "../../../components/schemas/common/Common.yaml#/components/schemas/BlockNumberOrTag"
        - name: rewardPercentiles
          required: false
          schema:
            $ref: "../../../components/schemas/common/Common.yaml#/components/schemas/RewardPercentiles"
          description: A monotonically increasing list of percentile (between 0 and 100) values. For each block in the requested range, the transactions will be sorted in ascending order by effective tip per gas and sampled at the specified percentiles.
          in: query

      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "../../../components/requests/JsonRpcRequest.yaml#/components/schemas/JsonRpcRequest"
                - $ref: "#/components/schemas/EthFeeHistoryReq"

      responses:
        200:
          description: Returns historical gas information for a range of blocks.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "../../../components/responses/JsonRpcResponse.yaml#/components/schemas/JsonRpcResponse"
                  - $ref: "#/components/schemas/EthFeeHistoryResp"

      x-codeSamples:
        - lang: "Shell"
          label: "Curl"
          source:
            $ref: "../../../code-samples/curl/eth/gas/feeHistory.sh"
        - lang: "Java"
          label: "Java"
          source:
            $ref: "../../../code-samples/java/src/main/java/opensdk/sdk/apis/eth/gas/EthFeeHistoryExample.java"
        - lang: "JavaScript"
          label: "Javascript"
          source:
            $ref: "../../../code-samples/javascript/eth/gas/feeHistory.js"
        - lang: "Python"
          label: "Python"
          source:
            $ref: "../../../code-samples/python/eth/gas/feeHistory.py"

components:
  schemas:
    EthFeeHistoryReq:
      type: object
      properties:
        method:
          type: string
          default: 'eth_feeHistory'
        params:
          type: array
          items:
            properties:
              BlockCount:
                title: BlockCount
                type: string
                format: Hexadecimal
                description: Number of blocks in the requested range.
              BlockNumberOrTag:
                $ref: "../../../components/schemas/common/Common.yaml#/components/schemas/BlockNumberOrTag"
              RewardPercentiles:
                $ref: "../../../components/schemas/common/Common.yaml#/components/schemas/RewardPercentiles"
          example: [ "0x10", "latest", [ 0.1, 0.2, 0.3 ] ]

    EthFeeHistoryResp:
      type: object
      properties:
        result:
          type: object
          required: 
            - oldestBlock
            - baseFeePerGas
            - gasUsedRatio
          properties:
              oldestBlock:
                type: string
                format: hex
                description: Lowest number block of returned range.
              baseFeePerGas:
                $ref: "../../../components/schemas/common/Common.yaml#/components/schemas/BaseFeePerGas"
              gasUsedRatio:
                type: array
                description: An array of block gas used ratios. Measures the network congestion level. These are calculated as the ratio of block gas used and [KIP-71 MAX_BLOCK_GAS_USED_FOR_BASE_FEE](https://kips.klaytn.foundation/KIPs/kip-71). If the ratio is above 1, then 1 is returned.
                items:
                    type: number
                    format: float
              reward:
                $ref: "../../../components/schemas/common/Common.yaml#/components/schemas/Reward"
          example:
              {
                "oldestBlock": "0xa5b",
                "reward": [
                  [
                    "0x0",
                    "0x0",
                    "0x0"
                  ], [
                    "0x0",
                    "0x0",
                    "0x0"
                  ], [
                    "0x0",
                    "0x0",
                    "0x0"
                  ], [
                    "0x0",
                    "0x0",
                    "0x0"
                  ], [
                    "0x0",
                    "0x0",
                    "0x0"
                  ], [
                    "0x5d21dba00",
                    "0x5d21dba00",
                    "0x5d21dba00"
                  ], [
                    "0x0",
                    "0x0",
                    "0x0"
                  ], [
                    "0x0",
                    "0x0",
                    "0x0"
                  ], [
                    "0x5d21dba00",
                    "0x5d21dba00",
                    "0x5d21dba00"
                  ], [
                    "0x0",
                    "0x0",
                    "0x0"
                  ],
                ],
                "baseFeePerGas": [
                  "0x0","0x0","0x0", "0x0", "0x0", "0x0","0x0","0x0", "0x0","0x0","0x0", "0x0","0x0","0x0","0x0","0x0"
                ],
                "gasUsedRatio": [
                  0,0,0,0, 0,0.0002952004000002952,0,0,0.00029504250000029504,0,0,0.0002963777000002964,0,0,0,0
                ]
              }

