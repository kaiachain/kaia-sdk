openapi: "3.0.2"
info:
  title: KAIA Open API
  version: "1.10.0"
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost:7151

paths:
  /debug/vMTracing/traceBadBlock:
    post:
      summary: "[Trace] debug_traceBadBlock"
      tags:
        - debug
      operationId: traceBadBlock
      description: |
        The traceBadBlock method will return a full stack trace of all invoked opcodes of all transactions that were included in this block.

        **NOTE:** the parent of this block must be present or it will fail.

        **JSONRPC:** `debug_traceBadBlock`

      parameters:
        - name: hash
          in: query
          description: Hash of a block.
          required: true
          schema:
            $ref: "../../../components/schemas/common/Common.yaml#/components/schemas/BlockHash"
        - name: options
          in: query
          description: Tracing options.
          required: false
          schema:
            $ref: "../../../components/schemas/common/Common.yaml#/components/schemas/TracingOptions"

      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "../../../components/requests/JsonRpcRequest.yaml#/components/schemas/JsonRpcRequest"
                - $ref: "#/components/schemas/DebugTraceBadBlockReq"

      responses:
        200:
          description: The structured logs created during the execution of KLVM.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "../../../components/responses/JsonRpcResponse.yaml#/components/schemas/JsonRpcResponse"
                  - $ref: "#/components/schemas/DebugTraceBadBlockResp"

      x-codeSamples:
        - lang: "Shell"
          label: "Curl"
          source:
            $ref: "../../../code-samples/curl/debug/vMTracing/traceBadBlock.sh"
        - lang: "Java"
          label: "Java"
          source:
            $ref: "../../../code-samples/java/src/main/java/opensdk/sdk/apis/debug/vMTracing/DebugTraceBadBlockExample.java"
        - lang: "JavaScript"
          label: "Javascript"
          source:
           $ref: "../../../code-samples/javascript/debug/vMTracing/traceBadBlock.js"
        - lang: "Python"
          label: "Python"
          source:
            $ref: "../../../code-samples/python/debug/vMTracing/traceBadBlock.py"

components:
  schemas:
    DebugTraceBadBlockReq:
      type: object
      properties:
        method:
          type: string
          default: debug_traceBadBlock
        params:
          type: array
          items:
            properties:
              Hash:
                title: Hash
                type: string
                format: 32-byte DATA
                description: Hash of a block.
              TracingOptions:
                $ref: "../../../components/schemas/common/Common.yaml#/components/schemas/TracingOptions"
          example: ["0x1d5ba00e313a81ae6d409d459c153327072665d9ea2f47608369722baf0cfbb6"]

    DebugTraceBadBlockResp:
      type: object
      properties:
        result:
          type: array
          description: The structured logs created during the execution of KLVM.
          items:
            type: object
            properties:
              failed:
                type: boolean
              gas:
                type: integer
              returnValue:
                type: string
              structLogs:
                type: array
                items:
                  type: object
                  properties:
                    gas:
                      type: integer
                    failed:
                      type: boolean
                    returnValue:
                      type: string
                    structLogs:
                      type: array
                      items:
                        type: object
          example: [
            {
              result: {
                failed: false,
                gas: 67100,
                returnValue: "",
                structLogs: []
              }
            }, {
              result: {
                failed: false,
                gas: 195179,
                returnValue: "",
                structLogs: [{"gas":67100,"failed":false,"returnValue":"","structLogs":[]},{...}]
              }
            }
          ]
