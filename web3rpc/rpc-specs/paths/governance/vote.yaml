openapi: "3.0.2"
info:
  title: KAIA OPEN API
  version: "1.10.0"
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost:7151

paths:
  /governance/vote:
    post:
      operationId: vote
      summary: "governance_vote"
      description: |
        The vote method submits a new vote. If the node has the right to vote based on governance mode, the vote can be placed. If not, an error message will be returned and the vote will be ignored.

        **JSONRPC:** `governance_vote`

      tags:
        - governance

      parameters:
        - name: key
          required: true
          schema:
            type: string
          description: Name of the configuration setting to be changed. Key has the form of domain.field
          in: query
        - name: value
          required: true
          schema:
            $ref: "#/components/schemas/Value"
          description: Various types of value for each key.
          in: query


      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "../../components/requests/JsonRpcRequest.yaml#/components/schemas/JsonRpcRequest"
                - type: object
                  required:
                    - method
                    - params
                  properties:
                    method:
                      type: string
                      default: 'governance_vote'
                    params:
                      type: array
                      items:
                        properties:
                          Key:
                            type: string
                            title: Key
                            description: Name of the configuration setting to be changed. Key has the form of domain.field
                          Value:
                            $ref: "#/components/schemas/Value"
                      example: ["governance.governancemode", "ballot"]

      responses:
        200:
          description: Result of vote submission
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "../../components/responses/JsonRpcResponse.yaml#/components/schemas/JsonRpcResponse"
                  - type: object
                    properties:
                      result:
                        type: string
                        description: Result of vote submission
                        example: Your vote was successfully placed.

      x-codeSamples:
        - lang: "Shell"
          label: "Curl"
          source:
            $ref: "../../code-samples/curl/governance/vote.sh"
        - lang: "Java"
          label: "Java"
          source:
            $ref: "../../code-samples/java/src/main/java/opensdk/sdk/apis/governance/GovernanceVoteExample.java"
        - lang: "JavaScript"
          label: "Javascript"
          source:
            $ref: "../../code-samples/javascript/governance/vote.js"
        - lang: "Python"
          label: "Python"
          source:
            $ref: "../../code-samples/python/governance/vote.py"

components:
  schemas:
    Value:
      type: string
      description: |
        Various types of value for each key.
        <table>
            <thead>
                <tr>
                    <th>Key</th>
                    <th>Description</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>"governance.governancemode"</td>
                    <td>STRING. One of the three governance modes. "none", "single", "ballot"</td>
                </tr>
                <tr>
                    <td>"governance.governingnode"</td>
                    <td>ADDRESS. Designated governing node's address. It only works if the governance mode is "single" e.g.,"0xe733cb4d279da696f30d470f8c04decb54fcb0d2"</td>
                </tr>
                <tr>
                    <td>"governance.unitprice"</td>
                    <td>NUMBER. Price of unit gas. e.g., 25000000000</td>
                </tr>
                <tr>
                    <td>"governance.addvalidator"</td>
                    <td>ADDRESS. Address of a new validator candidate. e.g., 0xe733cb4d279da696f30d470f8c04decb54fcb0d2</td>
                </tr>
                <tr>
                    <td>"governance.removevalidator"</td>
                    <td>ADDRESS. Address of a current validator which need to be removed. e.g., 0xe733cb4d279da696f30d470f8c04decb54fcb0d2</td>
                </tr>
                <tr>
                    <td>"governance.deriveshaimpl"</td>
                    <td>NUMBER. Policy to generate the transaction hash and receipt hash in a block header. See here for available options. e.g., 2 (DeriveShaConcat)</td>
                </tr>
                <tr>
                    <td>"governance.govparamcontract"</td>
                    <td>ADDRESS. Address of the GovParam contract. e.g., 0xe733cb4d279da696f30d470f8c04decb54fcb0d2</td>
                </tr>
                <tr>
                    <td>"istanbul.epoch"</td>
                    <td>NUMBER. A period in which votes are gathered in blocks. When an epoch end, all votes which haven't been passed will be cleared. e.g., 86400</td>
                </tr>
                <tr>
                    <td>"istanbul.committeesize"</td>
                    <td>NUMBER. The number of validators in a committee.(sub in chain configuration) e.g., 7</td>
                </tr>
                <tr>
                    <td>"reward.mintingamount"</td>
                    <td>STRING. Amount of Peb minted when a block is generated. Double quotation marks are needed for a value. e.g., "9600000000000000000"</td>
                </tr>
                <tr>
                    <td>"reward.ratio"</td>
                    <td>STRING. Distribution rate for a CN/KGF/KIR separated by "/". The sum of all values has to be 100. e.g., "50/40/10" meaning CN 50%, KGF 40%, KIR 10%</td>
                </tr>
                <tr>
                    <td>"reward.kip82ratio"</td>
                    <td>STRING. Distribution ratio of the block proposer to stakers separated by "/". The sum of all values has to be "100". See KIP-82 for further details. e.g., "20/80" means that the proposer takes 20% while stakers take 80%.</td>
                </tr>
                <tr>
                    <td>"reward.useginicoeff"</td>
                    <td>BOOL. Use the Gini coefficient or not. true, false</td>
                </tr>
                <tr>
                    <td>"reward.deferredtxfee"</td>
                    <td>BOOL. The way of giving transaction fee to a proposer. If true, it means the tx fee will be summed up with block reward and distributed to the proposer, KIR and KGF. If not, all tx fee will be given to the proposer. true, false</td>
                </tr>
                <tr>
                    <td>"reward.minimumstake"</td>
                    <td>STRING. Amount of Kaia required to be a CN (Consensus Node). Double quotation marks are needed for a value. e.g., "5000000"</td>
                </tr>
                <tr>
                    <td>"kip71.lowerboundbasefee"</td>
                    <td>NUMBER. The lowest possible base fee. See KIP-71 for further details. e.g., 25000000000</td>
                </tr>
                <tr>
                    <td>"kip71.upperboundbasefee"</td>
                    <td>NUMBER. The highest possible base fee. e.g., 750000000000</td>
                </tr>
                <tr>
                    <td>"kip71.gastarget"</td>
                    <td>NUMBER. The block gas that base fee wants to achieve. The base fee increases when parent block contains more than gas target, and decreases when parent block contains less than gas target. e.g., 30000000</td>
                </tr>
                <tr>
                    <td>"kip71.basefeedenominator"</td>
                    <td>NUMBER. Controls how fast base fee changes. e.g., 20</td>
                </tr>
                <tr>
                    <td>"kip71.maxblockgasusedforbasefee"</td>
                    <td>NUMBER. The maximum block gas perceived in base fee calculation. e.g., 60000000</td>
                </tr>
            </tbody>
        </table>

        