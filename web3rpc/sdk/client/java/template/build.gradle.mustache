apply plugin: 'idea'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

group = '{{groupId}}'
version = '{{artifactVersion}}'

buildscript {
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:2.3.+'
        classpath 'com.github.dcendents:android-maven-gradle-plugin:1.5'
        classpath 'io.codearte.gradle.nexus:gradle-nexus-staging-plugin:0.30.0'
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

if(hasProperty('target') && target == 'android') {

    apply plugin: 'com.android.library'
    apply plugin: 'com.github.dcendents.android-maven'

    android {
        compileSdkVersion 25
        buildToolsVersion '25.0.2'
        defaultConfig {
            minSdkVersion 14
            targetSdkVersion 25
        }

        compileOptions {
            sourceCompatibility JavaVersion.VERSION_1_8
            targetCompatibility JavaVersion.VERSION_1_8
        }

        // Rename the aar correctly
        libraryVariants.all { variant ->
            variant.outputs.each { output ->
                def outputFile = output.outputFile
                if (outputFile != null && outputFile.name.endsWith('.aar')) {
                    def fileName = "${project.name}-${variant.baseName}-${version}.aar"
                    output.outputFile = new File(outputFile.parent, fileName)
                }
            }
        }

        dependencies {
            provided "jakarta.annotation:jakarta.annotation-api:$jakarta_annotation_version"
            implementation "org.web3j:core:4.9.7"
        }
    }

    afterEvaluate {
        android.libraryVariants.all { variant ->
            def task = project.tasks.create "jar${variant.name.capitalize()}", Jar
            task.description = "Create jar artifact for ${variant.name}"
            task.dependsOn variant.javaCompile
            task.from variant.javaCompile.destinationDir
            task.destinationDir = project.file("${project.buildDir}/outputs/jar")
            task.archiveName = "${project.name}-${variant.baseName}-${version}.jar"
            artifacts.add('archives', task);
        }
    }

    task sourcesJar(type: Jar) {
        from android.sourceSets.main.java.srcDirs
        archiveClassifier = 'sources'
    }

    artifacts {
        archives sourcesJar
    }

} else {

    apply plugin: 'java'
    apply plugin: 'signing'
    apply plugin: 'io.codearte.nexus-staging'

    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8
    task sourcesJar(type: Jar, dependsOn: classes) {
        archiveClassifier = 'sources'
        from sourceSets.main.allSource
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        archiveClassifier = 'javadoc'
        from javadoc.destinationDir
    }

    publishing {
        publications {
            mavenJava(MavenPublication) {
               artifactId = '{{artifactId}}'
               from components.java
               artifact sourcesJar
               artifact javadocJar

               pom {
                   name = project.name
                   description = '{{description}}'
                   version = project.version
                   url = "https://docs.kaia.io/"
                   licenses {
                       license {
                           name = "The Apache License, Version 2.0"
                           url = "http://www.apache.org/licenses/LICENSE-2.0.txt"
                           distribution = "repo"
                       }
                   }
                   scm {
                        url = 'https://github.com/kaiachain/kaia-sdk'
                        connection = 'scm:git:https://github.com/kaiachain/kaia-sdk.git'
                        developerConnection = 'scm:git:ssh://github.com:kaiachain/kaia-sdk.git'
                    }
               }
            }
        }
        repositories {
            maven {
            def releasesRepoUrl = layout.buildDirectory.dir('libs')
            url = releasesRepoUrl
            }
        }
    }
    if (System.getenv("PUBLISH_TO_MAVEN_PUBLIC")) {
      signing {
        def signingPassword = System.getenv("ORG_GRADLE_PROJECT_SIGNINGPASSWORD")

        def signingKey_base64 = System.getenv('ORG_GRADLE_PROJECT_SIGNINGKEY')
        def signingKey = (signingKey_base64 == null? null:
        new String(Base64.getMimeDecoder().decode(signingKey_base64.toString()), "utf-8"))
        useInMemoryPgpKeys(signingKey, signingPassword)
        sign publishing.publications.mavenJava
      }
    }

    task execute(type:JavaExec) {
       main = System.getProperty('mainClass')
       classpath = sourceSets.main.runtimeClasspath
    }

}

ext {
    swagger_annotations_version = "1.6.3"
    jackson_version = "2.12.6"
    jackson_databind_version = "2.12.6.1"
    {{#openApiNullable}}
    jackson_databind_nullable_version = "0.2.6"
    {{/openApiNullable}}
    jakarta_annotation_version = "1.3.5"
    jersey_version = "1.19.4"
    jodatime_version = "2.9.9"
    junit_version = "4.13.2"
}

dependencies {
    implementation group: 'org.projectlombok', name: 'lombok', version: '1.18.26'
    implementation "io.swagger:swagger-annotations:$swagger_annotations_version"
    implementation "com.google.code.findbugs:jsr305:3.0.2"
    implementation "com.sun.jersey:jersey-client:$jersey_version"
    implementation "com.sun.jersey.contribs:jersey-multipart:$jersey_version"
    implementation "com.fasterxml.jackson.core:jackson-core:$jackson_version"
    implementation "com.fasterxml.jackson.core:jackson-annotations:$jackson_version"
    implementation "com.fasterxml.jackson.core:jackson-databind:$jackson_databind_version"
    implementation "com.fasterxml.jackson.jaxrs:jackson-jaxrs-json-provider:$jackson_version"
    {{#openApiNullable}}
    implementation "org.openapitools:jackson-databind-nullable:$jackson_databind_nullable_version"
    {{/openApiNullable}}
    {{#joda}}
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-joda:$jackson_version"
    {{/joda}}
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310:$jackson_version"
    implementation "jakarta.annotation:jakarta.annotation-api:$jakarta_annotation_version"
    testImplementation "junit:junit:$junit_version"
    implementation "org.web3j:core:4.9.7"
    implementation 'com.google.code.gson:gson:2.10.1'
    implementation 'io.gsonfire:gson-fire:1.8.5'
    implementation 'com.squareup.retrofit2:retrofit:2.9.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.9.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.9.0'
    implementation 'org.apache.oltu.oauth2:org.apache.oltu.oauth2.client:1.0.0'
}
