openapi: "3.0.2"
info:
  title: KAIA Open API
  version: "1.10.0"
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html

servers:
  - url: http://localhost:7151

paths:
  /eth/block/getBlockByHash:
    post:
      summary: "[Block] eth_getBlockByHash"
      tags:
        - eth
      operationId: getBlockByHash
      description: |
        Returns information about a block by hash.

        Please check Caution-Block before using this API

        **JSONRPC:** `eth_getBlockByHash`

      parameters:
        - name: blockHash
          in: query
          description: Hash of a block.
          required: true
          schema:
            type: string
            format: 32-byte DATA
        - name: isTransactionObjects
          in: query
          description: If true, it returns the full transaction objects, if false only the hashes of the transactions.
          required: true
          schema:
            type: boolean

      requestBody:
        content:
          application/json:
            schema:
              allOf:
                - $ref: "../../../components/requests/JsonRpcRequest.yaml#/components/schemas/JsonRpcRequest"
                - $ref: "#/components/schemas/KlayGetBlockByHashReq"

      responses:
        200:
          description: Returns information about a block by hash.
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "../../../components/responses/JsonRpcResponse.yaml#/components/schemas/JsonRpcResponse"
                  - $ref: "#/components/schemas/KlayGetBlockByHashResp"

      x-codeSamples:
        - lang: "Shell"
          label: "Curl"
          source:
            $ref: "../../../code-samples/curl/eth/block/getBlockByHash.sh"
        - lang: "Java"
          label: "Java"
          source:
            $ref: "../../../code-samples/java/src/main/java/opensdk/sdk/apis/eth/block/EthGetBlockByHashExample.java"
        - lang: "JavaScript"
          label: "Javascript"
          source:
            $ref: "../../../code-samples/javascript/eth/block/getBlockByHash.js"
        - lang: "Python"
          label: "Python"
          source:
            $ref: "../../../code-samples/python/eth/block/getBlockByHash.py"

components:
  schemas:
    KlayGetBlockByHashReq:
      type: object
      required:
        - method
      properties:
        method:
          type: string
          default: 'eth_getBlockByHash'
        params:
          type: array
          items:
            properties:
              BlockHash:
                title: BlockHash
                description: Hash of a block.
                type: string
                format: 32-byte DATA
              IsTransactionObjects:
                title: IsTransactionObjects
                description: If true, it returns the full transaction objects, if false only the hashes of the transactions.
                type: boolean
          example: ["0xb8deae63002d2b6aa33247c8ef545383ee0fd2282ac9b49dbbb74114389ddb5c", true]

    KlayGetBlockByHashResp:
      type: object
      properties:
        result:
            $ref: "#/components/schemas/EthBlockObject"

    EthBlockObject:
      type: object
      required:
        - baseFeePerGas
        - difficulty
        - extraData
        - gasLimit
        - gasUsed
        - hash
        - logsBloom
        - miner
        - mixHash
        - nonce
        - number
        - parentHash
        - receiptsRoot
        - sha3Uncles
        - size
        - stateRoot
        - timestamp
        - totalDifficulty
        - transactionsRoot
      properties:
        baseFeePerGas:
          type: string
          format: hex
          description: The base fee per gas.
        difficulty:
          type: string
          format: hex
          description: The integer of the difficulty for this block
        extraData:
          type: string
          format: DATA
          description: The "extra data" field of this block.
        gasLimit:
          type: string
          format: hex
          description: The maximum gas allowed in this block.
        gasUsed:
          type: string
          format: hex
          description: The total used gas by all transactions in this block.
        hash:
          type: string
          format: 32-byte DATA
          description: Hash of the block. null when it is a pending block.
        logsBloom:
          type: string
          format: 256-byte DATA
          description: The bloom filter for the logs of the block. null when it is a pending block.
        miner:
          type: string
          format: 20-byte DATA
          description: The address of the beneficiary to whom the mining rewards were given.
        mixHash:
          type: string
          format: 32-byte DATA
          description: The hash which proves combined with the nonce that a sufficient amount of computation has been carried out on this block.
        nonce:
          type: string
          format: 8-byte DATA
          description: The hash of the generated proof-of-work.
        number:
          type: string
          format: hex
          description: The block number. null when it is a pending block.
        parentHash:
          type: string
          format: 32-byte DATA
          description: Hash of the parent block.
        receiptsRoot:
          type: string
          format: 32-byte DATA
          description: The root of the receipts trie of the block.
        sha3Uncles:
          type: string
          format: 32-byte DATA
          description: The SHA3 of the uncles data in the block.
        size:
          type: string
          format: hex
          description: Integer of the size of this block in bytes.
        stateRoot:
          type: string
          format: 32-byte DATA
          description: The root of the final state trie of the block.
        timestamp:
          type: string
          format: hex
          description: The Unix timestamp for when the block was collated.
        totalDifficulty:
          type: string
          format: hex
          description: The total blockScore of the chain until this block
        transactionsRoot:
          type: string
          format: 32-byte DATA
          description: The root of the transaction trie of the block.
        transactions:
          type: array
          items:
            oneOf:
              - type: string
                title: TransactionHash
                format: 32-byte DATA
              - type: object
                title: TransactionObject
          description: Array of transaction objects, or 32-byte transaction hashes depending on the last given parameter.
        uncles:
          type: array
          description: Array of uncle hashes.
          items:
            type: string
            format: 32-byte DATA
      example:
        {
          baseFeePerGas: "0x5d21dba00",
          difficulty: "0x1",
          extraData: "0xd8820505846b6c617988676f312e31312e328664617277696e00000000000000f89ed594e733cb4d279da696f30d470f8c04decb54fcb0d2b841f1f600d136f93a5a2d9c12a7a9f6d7ba80a047c3910a2bbc01e38bcce25e48ed2004d21f134df5efaf1f8cbb9a26e1548e57628ab258c935490c11a7cd65324701f843b841444b3efc40071b6eec2c4d2630b483710b8fc7a601432431b0161f489102d1ca02f2ef93153d0be3843aa563d34cee1716163f58711843442aedd94a56303c0400",
          gasLimit: "0xe8d4a50fff",
          gasUsed: "0x0",
          governanceData: "0x",
          hash: "0xb8deae63002d2b6aa33247c8ef545383ee0fd2282ac9b49dbbb74114389ddb5c",
          logsBloom: "0x
          miner: "0x0000000000000000000000000000000000000000",
          mixHash: "0x63746963616c2062797a616e74696e65206661756c7420746f6c6572616e6365",
          nonce: "0x0000000000000000",
          number: "0x1",
          parentHash: "0x73255a60e9491b5715f9bfcb7fa1143296810f629836d4cefbd1921d9173d63d",
          receiptsRoot: "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
          reward: "0x0000000000000000000000000000000000000000",
          size: "0x2d7",
          stateRoot: "0xedb87f4b0f905a655c80d1768eb22b1eff2405098c4748b8364c869611e02a2b",
          timestamp: "0x5c99cbd8",
          totalDifficulty: "0x2",
          transactions: [ ],
          transactionsRoot: "0x56e81f171bcc55a6ff8345e692c0f86e5b48e01b996cadc001622fb5e363b421",
          uncles: [ ],
        }
